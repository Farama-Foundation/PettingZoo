# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
---
name: Python tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read

jobs:
  linux-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      # - uses: openrndr/setup-opengl@v1.1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install python3-opengl xvfb
          pip install -e .[all]
          pip install -e .[testing]
          AutoROM -v
      - name: Source distribution test
        run: |
          python -m pip install --upgrade build
          python -m build --sdist
          pip install dist/*.tar.gz
      - name: Release Test
        run: |
          xvfb-run -s "-screen 0 1024x768x24" pytest -v --cov=pettingzoo --cov-report term
      - name: Run coverage
        run: |
          coverage report -m
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: coverage.svg
      - name: Commit files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.github_token }}
          branch: ${{ github.ref }}
